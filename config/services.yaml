# Put parameters here that don't need to change on each machine where the application is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    # fixed
    locale:             fr_CH
    app_name:           Calculation
    app_version:        2.1.0
    app_owner:          bibi.nu
    app_owner_url:      https://www.bibi.nu
    app_owner_city:     Mont√©vraz
    app_description:    Programme de calculation.

    app_secret:         '%env(string:APP_SECRET)%'
    app_mode:           '%env(string:APP_MODE)%'

    # mailer
    mailer_user_name: Calculation
    mailer_user_email: calculation@bibi.nu

    # assets
    asset_base: '%env(string:ASSET_BASE)%'
    asset_locale: '%env(string:ASSET_LOCALE)%'

    # cookies
    cookie_path: '%env(string:COOKIE_PATH)%'
    cookie_secure: '%env(bool:COOKIE_SECURE)%'

    # keys
    openweather_key: '%env(string:OPENWEATHER_KEY)%'
    bing_translator_key:   '%env(string:BING_TRANSLATOR_KEY)%'
    google_translator_key: '%env(string:GOOGLE_TRANSLATOR_KEY)%'
    google_recaptcha_secret_key: '%env(string:GOOGLE_RECAPTCHA_SECRET_KEY)%'
    google_recaptcha_site_key: '%env(string:GOOGLE_RECAPTCHA_SITE_KEY)%'
    exchange_rate_key: '%env(string:EXCHANGE_RATE_KEY)%'
    akismet_key: '%env(string:AKISMET_KEY)%'
    ip_stack_key: '%env(string:IP_STACK_KEY)%'

    #links
    link_dev: '%env(string:LINK_DEV)%'
    link_prod: '%env(string:LINK_PROD)%'

    # optimize
    container.dumper.inline_factories: true

services:
    # default configuration for services
    _defaults:
        autowire: true
        autoconfigure: true
        bind:
            string $appName: '%app_name%'
            string $appNameVersion: '%app_name% v%app_version%'
            string $projectDir: '%kernel.project_dir%'
            bool $isDebug: '%kernel.debug%'

    # make classes in src/ available to be used as services
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Faker,Migrations,Pdf,Report,Tests,Traits,Kernel.php}'

    # controllers are imported separately
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # make public to use with vich_uploader
    App\Service\UserNamer:
        public: true
    App\Service\EntityFileNamer:
        public: true
    App\Service\EntityDirectoryNamer:
        public: true

    # validators
    App\Validator\RecaptchaValidator:
        arguments: ['%google_recaptcha_secret_key%']

    # used to display flash message when entities change
    # App\Listener\PersistenceListener:
    #     tags:
    #         - { name: 'doctrine.event_subscriber' }

    # used to update calculation when groups, categories or items change
    App\Listener\CalculationListener:
        tags:
            - { name: doctrine.event_listener, event: onFlush, lazy: true, entity: 'App\Interfaces\ParentCalculationInterface'}

    # used to update TimestampableInterface
    App\Listener\TimestampableListener:
        tags:
            - { name: doctrine.event_listener, event: onFlush, lazy: true, entity: 'App\Interfaces\TimestampableInterface'}

    # used to update user image
    App\Listener\UserImageListener:
        tags:
            - { name: doctrine.event_listener, event: postPersist, lazy: true, entity: 'App\Entity\User'}

    # custom line formatter for monolog
    monolog.custom_formatter:
        class: Monolog\Formatter\LineFormatter
        arguments: ["%%datetime%%|%%channel%%|%%level_name%%|%%message%%|%%context%%|%%extra%%\n", "d.m.Y H:i:s"]

    # add user identifier to extra data
    App\Logger\UserRequestProcessor:
        tags:
            - { name: monolog.processor }

    # custom Twig AppVariable
    twig.app_variable:
        class: App\Service\ApplicationService
        public: false
        calls:
            - [setEnvironment, ["%kernel.environment%"]]
            - [setDebug, ["%kernel.debug%"]]
            - [setTokenStorage, ['@security.token_storage']]
            - [setRequestStack, ['@request_stack']]


    _instanceof:
        App\Captcha\AlphaCaptchaInterface:
            tags: ['alpha_captcha']
        App\Translator\TranslatorServiceInterface:
            tags: ['translators_service']
        App\Interfaces\DisableListenerInterface:
            tags: ['disable_listener']

    App\Form\Type\AlphaCaptchaType:
        arguments:
            $captchas: !tagged_iterator alpha_captcha

    App\Translator\TranslatorFactory:
        arguments:
            $translators: !tagged_iterator translators_service

    App\Service\SuspendEventListenerService:
        arguments:
            $listeners: !tagged_iterator disable_listener

    App\Service\MailService:
        calls:
            - setMarkdown: ['@twig.markdown.default']
