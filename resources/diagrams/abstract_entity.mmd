---
title: Abstract Entity
---
classDiagram
    direction TB

    class EntityInterface {
        <<Interface>>
    }

    class AbstractEntity {
        <<Abstract>>
        -id ?int
        +getId() ?int
        +getDisplay() string
        +isNew() bool
    }

    class AbstractCategoryItemEntity {
        <<Abstract>>
    }

    class AbstractProperty {
        <<Abstract>>
    }

    class AbstractMargin {
        <<Abstract>>
    }

    EntityInterface <|.. AbstractEntity

    AbstractEntity <|-- AbstractCategoryItemEntity
    AbstractEntity <|-- AbstractMargin
    AbstractEntity <|-- AbstractProperty
    AbstractEntity <|-- Calculation
    AbstractEntity <|-- CalculationState
    AbstractEntity <|-- Group
    AbstractEntity <|-- Category
    AbstractEntity <|-- TaskItem
    AbstractEntity <|-- TaskItemMargin
    AbstractEntity <|-- User
    AbstractEntity <|-- Log

    AbstractCategoryItemEntity <|-- Product
    AbstractCategoryItemEntity <|-- Task

    AbstractProperty <|-- UserProperty
    AbstractProperty <|-- GlobalProperty

    AbstractMargin <|-- GlobalMargin
    AbstractMargin <|-- GroupMargin

    click EntityInterface call nodeCallback()
    click AbstractMargin call nodeCallback()
    click AbstractProperty call nodeCallback()
    click Calculation call nodeCallback()
    click CalculationState call nodeCallback()
    click Group call nodeCallback()
    click Category call nodeCallback()
    click Product call nodeCallback()
    click Task call nodeCallback()
    click User call nodeCallback()
    click GlobalMargin call nodeCallback()
    click AbstractCategoryItemEntity call nodeCallback()
    click Log call nodeCallback()
