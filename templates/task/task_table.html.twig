{% extends 'cards/card_table.html.twig' %}
{% from 'macros/_icons.html.twig' import icon, link %}
{# parameters #}
{%- set title = 'task.list.title' -%}
{%- set title_icon = ICON_TASK -%}
{%- set object_type = ENTITY_TASK -%}
{# header #}
{% block header_actions -%}
{% if allow_add %}
    {{ link(path('task_add', params), 'task.add.title', 'add-link p-0') }}
{% endif %}
{%- endblock %}
{# actions #}
{% block toolbar_actions -%}
{% if customData.dropdown is defined and customData.dropdown|length %}
    {%- set group_id = customData.group.id|default(0) -%}
    {%- set category_id = customData.category.id|default(0) -%}
    {% set data_default = 'task.fields.category'|trans %}
    {%- set input_value = group_id ? group_id : category_id -%}
    {%- set input_text = customData.group.code ?? customData.category.code ?? data_default -%}
    {{ _self.output_dropdown_menu('category', ICON_CATEGORY, input_text, 'task.list.category_help', input_value, data_default) }}
    <ul class="dropdown-menu">
        {{ _self.output_dropdown('category', 0, input_value, 'product.list.category_all_text'|trans, {}, 'filter-circle-xmark') }}
        {% for key, entry in customData.dropdown %}
            {{ _self.item_separator() }}
            {{ _self.output_dropdown('group', entry.id, group_id, key, {'data-parameter': 'groupId'}, ICON_GROUP) }}
            {% for code, id in entry.categories %}
                {{ _self.output_dropdown('child category', id, category_id, code, {'data-parameter': 'categoryId'}, ICON_CATEGORY) }}
            {% endfor %}
        {% endfor %}
    </ul>
{% endif %}
{%- endblock %}
{# global actions #}
{% block global_actions -%}
{{- _self.item_external(path('task_pdf'), 'task.list.pdf_title', ICON_PDF) }}
{{- _self.item_external(path('task_excel'), 'task.list.excel_title', ICON_EXCEL) }}
{%- endblock %}
{# edit actions #}
{% block edit_actions -%}
{{- _self.item_path(path('task_edit', params), 'task.edit.title', ICON_EDIT, edit_class) }}
{%- endblock %}
{# delete actions #}
{% block delete_actions -%}
{{- _self.item_path(path('task_delete', params), 'task.delete.title', ICON_DELETE, 'btn-delete') }}
{%- endblock %}
{# add actions #}
{% block add_actions -%}
{{- _self.item_path(path('task_add', params), 'task.add.title', ICON_ADD, 'btn-add') }}
{{- _self.item_path(path('task_clone', params), 'common.button_clone', ICON_COPY, 'btn-task-clone') }}
{%- endblock %}
{# show actions #}
{% block show_actions -%}
{{- _self.item_path(path('task_show', params), 'task.show.title', ICON_SHOW, show_class) }}
{%- endblock %}
{# other actions #}
{% block other_actions -%}
{% if allow_show %}
    {{- _self.item_separator('task-compute-divider') }}
    {{- _self.item_path(path('task_compute', params), 'task_compute.title', 'keyboard', 'btn-task-compute') }}
{% endif %}
{%- endblock %}
{# custom view header #}
{% block custom_view_header -%}
{%- if row_edit -%}
    <a href="{{ path('task_edit', params) }}" class="item-link text-body" title="{{ 'task.edit.title'|trans }}">%name%</a>
{%- elseif row_show -%}
    <a href="{{ path('task_show', params) }}" class="item-link text-body" title="{{ 'task.show.title'|trans }}">%name%</a>
{%- else -%}
    <span>%name%</span>
{%- endif -%}
{%- endblock %}
{# custom view body #}
{% block custom_view_body -%}
{{ _self.property_value('%groupCode% / %categoryCode%') }}
{{ _self.property_row('task.fields.unit', '%unit%') }}
{{ _self.property_row('task.fields.items', '%items%') }}
{%- endblock %}
