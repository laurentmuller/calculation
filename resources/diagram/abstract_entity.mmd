---
title: Abstract Entity
---
classDiagram
    direction TB
    class EntityInterface {
        <<Interface>>
        +getId() ?int
        +getDisplay() string
        +isNew() bool
    }

    class AbstractEntity {
        <<Abstract>>
    }
    class AbstractCategoryItemEntity {
        <<Abstract>>
    }
    class AbstractProperty {
        <<Abstract>>
    }
    class AbstractMargin {
        <<Abstract>>
    }
    class Calculation {
    }

    class Group {
    }

    class GroupMargin {
    }

    class Category {
    }

    class Product {
    }

    class Task {
    }

    class TaskItem {
    }

    class TaskItemMargin {
    }

    class User {
    }

    class UserProperty {
    }

    class GlobalProperty {
    }

    class GlobalMargin {
    }

    class CalculationState {
    }

    EntityInterface <|.. AbstractEntity
    AbstractEntity <|-- AbstractCategoryItemEntity
    AbstractEntity <|-- AbstractMargin
    AbstractEntity <|-- AbstractProperty
    AbstractEntity <|-- Calculation
    AbstractEntity <|-- CalculationState
    AbstractEntity <|-- Group
    AbstractEntity <|-- Category
    AbstractEntity <|-- TaskItem
    AbstractEntity <|-- TaskItemMargin
    AbstractEntity <|-- User
    AbstractCategoryItemEntity <|-- Product
    AbstractCategoryItemEntity <|-- Task
    AbstractProperty <|-- UserProperty
    AbstractProperty <|-- GlobalProperty
    AbstractMargin <|-- GlobalMargin
    AbstractMargin <|-- GroupMargin

    click AbstractMargin call nodeCallback()
    click AbstractProperty call nodeCallback()
    click Calculation call nodeCallback()
    click CalculationState call nodeCallback()
    click Group call nodeCallback()
    click Category call nodeCallback()
    click Product call nodeCallback()
    click Task call nodeCallback()
    click User call nodeCallback()
