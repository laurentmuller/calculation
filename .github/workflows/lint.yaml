name: Lint

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: "Install PHP with extensions"
        uses: shivammathur/setup-php@v2
        with:
          coverage: "none"
          extensions: intl
          php-version: '8.1'
          tools: composer:v2

      - name: Determine composer cache directory
        id: composer-cache
        run: echo "::set-output name=directory::$(composer config cache-dir)"

      - name: Cache dependencies installed with composer
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.directory }}
          key: composer-${{ runner.os }}-${{ hashFiles('composer.*') }}
          restore-keys: composer-${{ runner.os }}-composer-

      - name: Download dependencies
        id: install
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Download Symfony CLI
        if: always() && steps.install.outcome == 'success'
        run: wget https://get.symfony.com/cli/installer -O - | bash

      - name: Lint YAML
        if: always() && steps.install.outcome == 'success'
        run: 'php bin/console lint:yaml translations config .github/workflows --parse-tags'

      - name: Lint Twig
        if: always() && steps.install.outcome == 'success'
        run: 'php bin/console lint:twig --env=prod templates'

      - name: Lint XLIFF
        if: always() && steps.install.outcome == 'success'
        run: 'php bin/console lint:xliff translations'

      - name: Lint Container
        if: always() && steps.install.outcome == 'success'
        run: 'php bin/console lint:container'

      - name: Schema validate
        if: always() && steps.install.outcome == 'success'
        run: 'php bin/console doctrine:schema:validate --skip-sync -vvv --no-interaction'

      - name: Composer validate
        if: always() && steps.install.outcome == 'success'
        run: composer validate --strict
