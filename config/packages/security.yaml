security:
    enable_authenticator_manager: true

    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            switch_user: true
            login_throttling: ~

            form_login:
                enable_csrf: true
                login_path: app_login
                check_path: app_login
                username_parameter: username
                password_parameter: password

            logout:
                path: app_logout
                target: /login?logout=success

            remember_me:
                signature_properties: [email, password]
                remember_me_parameter: remember_me
                secret: '%app_secret%'
                path:   '%cookie_path%'
                secure: false

    access_control:
        - { path: ^/login,                 roles: PUBLIC_ACCESS, requires_channel: '%env(SECURE_SCHEME)%' }
        - { path: ^/resetting,             roles: PUBLIC_ACCESS, requires_channel: '%env(SECURE_SCHEME)%' }
        - { path: ^/reset-password,        roles: PUBLIC_ACCESS, requires_channel: '%env(SECURE_SCHEME)%'  }
        # - { path: ^/register$,             roles: PUBLIC_ACCESS, requires_channel: '%env(SECURE_SCHEME)%'  }
        - { path: ^/about/policy,          roles: PUBLIC_ACCESS, requires_channel: '%env(SECURE_SCHEME)%'  }
        - { path: ^/about/licence,         roles: PUBLIC_ACCESS, requires_channel: '%env(SECURE_SCHEME)%'  }
        - { path: ^/ajax/checkuser,        roles: PUBLIC_ACCESS, requires_channel: '%env(SECURE_SCHEME)%'  }
        - { path: ^/ajax/captcha/image,    roles: PUBLIC_ACCESS, requires_channel: '%env(SECURE_SCHEME)%'  }
        - { path: ^/ajax/captcha/validate, roles: PUBLIC_ACCESS, requires_channel: '%env(SECURE_SCHEME)%'  }
        - { path: ^/admin/,                roles: ROLE_ADMIN,    requires_channel: '%env(SECURE_SCHEME)%' }
        - { path: ^/,                      roles: ROLE_USER,     requires_channel: '%env(SECURE_SCHEME)%' }
