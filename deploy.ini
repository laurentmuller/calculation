; log file
log = D:/Prod/deploy_local.log

; directory for temporary files
tempDir = D:/Prod/Temp

[symphony]
; server
remote = file://D:/Prod/calculation
;password =
;remote =

; files and directories to ignore
ignore = "
    .git*
    *.dist
    *.md
    *.rst
    *.phar
    *.js.map
    *.css.map
    *.neon
    .project
    .settings
    .buildpath
    .travis.yml
    .scrutinizer.yml
    .env.test
    .travis.yml
    .github
    .gitignore
    .gitattributes
    .php-cs-fixer*.php
    deploy
    env.ini
    deploy.ini
    psalm.xml
    rector.php
    vendor.json
    symfony.lock
    Tests
    tests
    license*
    LICENSE*
    README*
    changelog*
    CHANGELOG*
    phpunit.xml.dist
    /bin
    /deploy
    /vendor/bin
    /vendor-bin
    /vendor/fpdf/fpdf/original
    /var/cache/
    /var/log/
    /var/sessions/
    /public/images/users
    /vendor/fakerphp/faker/src/Faker/Provider
    !/vendor/fakerphp/faker/src/Faker/Provider/*.php
    !/vendor/fakerphp/faker/src/Faker/Provider/en_US
    !/vendor/fakerphp/faker/src/Faker/Provider/fr_FR
    !/vendor/fakerphp/faker/src/Faker/Provider/fr_CH
    /vendor/setasign/fpdf/doc
    /vendor/setasign/fpdf/makefont
    /vendor/setasign/fpdf/tutorial
    /vendor/setasign/fpdf/*.htm
    /vendor/setasign/fpdf/*.txt
    /config/routes/dev
    /config/packages/dev
    /config/packages/test
    *.xlf
    !*.en.xlf
    !*.fr.xlf
    !*.fr_CH.xlf
"

; minify *.js *.css files
preprocess = 1

; purge cache
purge[] = var/cache/prod
purge[] = var/log

; before jobs
before[] = local: cmd /C "SET SYMFONY_ENV=prod"
before[] = local: composer install --prefer-dist --optimize-autoloader --no-dev --classmap-authoritative

; after jobs
after[] = upload: env.ini .env.local
after[] = local: cmd /C "SET SYMFONY_ENV="
after[] = local: composer update
