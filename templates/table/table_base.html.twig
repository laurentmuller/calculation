{% extends 'cards/card_base.html.twig' %}
{# imports #}
{% import 'macros/_icons.html.twig' as icons %}

{# macros #}
{% macro attribs(attributes) -%}
{% for attrname, attrvalue in attributes %} {{ attrname }}="{{ attrvalue }}"{% endfor %}
{%- endmacro %}

{% macro output_column(column, pointer) -%}
{%- set attributes = {
    'class': column.class|default('d-none') ~ (pointer ? ' cursor-pointer': ''),
    'data-field': column.field,
    'data-visible': (column.visible ?? true)|json_encode,
    'data-sortable': (column.sortable ?? false)|json_encode, 
    'data-sort-order': column.order,
    'data-card-visible': (column.cardVisible ?? true)|json_encode,
    'data-card-bold': (column.cardBold ?? false)|json_encode        
} -%}
{%- if column.cellFormatter -%}
    {%- set attributes = attributes|merge({'data-formatter': column.cellFormatter}) -%}
{%- endif -%}
{%- if column.styleFormatter -%}
    {%- set attributes = attributes|merge({'data-cell-style': column.styleFormatter}) -%}
{%- endif -%}
<th{{ _self.attribs(attributes) }}>
   	{{- column.title is defined ? column.title|trans : '&nbsp;'|raw -}}
</th>
{%- endmacro %}

{# macros #}
{% macro output_dropdown(suffix, value, selection, text) -%}
<button type="button" data-value="{{ value }}" class="dropdown-item dropdown-{{ suffix }}{% if value == selection %} active{% endif %}">{{ text|default(value)|capitalize }}</button>
{%- endmacro %}

{% macro item_path(path, text, icon, class = '') %}
{%- set class = ('dropdown-item rowlink-skip dropdown-item-path ' ~ class|default(''))|trim -%}
{{ icons.link(path, text, class, icon ~ ' fa-fw mr-1') }}
{%- endmacro %}

{% macro item_global(path, text, icon) %}
{{ icons.dropdownItem(path, text, icon) }}
{%- endmacro %}

{% macro item_external(path, text, icon, class = '') %}
{%- set class = ('dropdown-item rowlink-skip ' ~ class|default(''))|trim -%}
{{ icons.linkExternal(path, text, class, icon ~ ' fa-fw') }}
{%- endmacro %}

{% macro item_separator() %}
{{ icons.dropdownSeparator() }}
{%- endmacro %}

{# granted actions #}
{%- set object_type  = object_type|default('none') -%}
{%- set allow_show   = is_granted(EntityVoterInterface.ATTRIBUTE_SHOW, object_type) -%}
{%- set allow_add    = is_granted(EntityVoterInterface.ATTRIBUTE_ADD, object_type) -%}
{%- set allow_edit   = is_granted(EntityVoterInterface.ATTRIBUTE_EDIT, object_type) -%}
{%- set allow_delete = is_granted(EntityVoterInterface.ATTRIBUTE_DELETE, object_type) -%}
{%- set allow_export = is_granted(EntityVoterInterface.ATTRIBUTE_EXPORT, object_type) -%}
{%- set row_show     = allow_show and app.actionShow -%}
{%- set row_edit     = allow_edit and app.actionEdit -%}
{%- set show_class   = 'btn-show' ~ (row_show ? ' btn-default' : '') -%}
{%- set edit_class   = 'btn-edit' ~ (row_edit ? ' btn-default' : '') -%}

{# parameters #}
{%- set attributes   = attributes|default({}) -%}
{%- set row_selector = 'table-primary' -%}
{%- set id           = app.request.get('id', 0) -%}
{%- set caller       = path(app.request.get('_route')) -%}
{%- set params = params|default({})|merge({
        'id': id,
        'caller': caller, 
        'search': search, 
        'sort': sort, 
        'order': order, 
        'offset': offset, 
        'limit': limit,
        'card': card}) -%}

{# classes #}
{% block card_container_class '' %}
{% block card_body_class ' px-3 py-2' %}

{# body #}
{% block card_body -%}
{# toolbar #}
<div id="toolbar" class="d-print-none">
    <div class="btn-group btn-group-sm" role="group">
        {% block toolbar_actions -%}{%- endblock %}
        <div class="btn-group btn-group-sm" role="group">
            <button id="button_other_actions" class="btn btn-secondary dropdown-toggle" type="button" data-toggle="dropdown" title="{{ 'common.other_actions'|trans }}">
                <i class="fas fa-bars" aria-hidden="true"></i>
            </button>
            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="button_other_actions">
            {% block global_actions -%}{%- endblock %}
            </div>
        </div>
    </div>        
</div>
{# table #}
<table id="table-edit" 
    {{ _self.attribs(attributes) }}    
    data-classes="table table-hover table-list table-sm" 
    data-row-selector="{{ '.' ~ row_selector }}"
    data-row-class="{{ row_selector }}"

    data-show-toggle="true"
    data-show-search-clear-button="true" 
    data-show-extended-pagination="true" 

    data-search-align="left"
    data-buttons-align="right"
    data-toolbar-align="right"

    data-search="true" 
    data-search-text="{{ search }}"
    data-page-list="[5, 10, 15, 20, 25, 30, 50]"

    data-total-rows="{{ total }}"
    data-total-not-filtered="{{ totalNotFiltered }}"

    data-card-view="{{ card|json_encode }}"

    data-sort-name="{{ sort }}"
    data-sort-order="{{ order }}"
    data-silent-sort="false"

    data-undefined-text="&nbsp;"
    data-icon-size="sm"

    data-pagination="true" 
    data-page-size="{{ limit }}"
    data-page-number = "{{ page }}"
    data-pagination-loop="false"
    data-side-pagination="server"
    data-pagination-pre-text="<i class='fa fa-caret-left fa-lg'></i>"
    data-pagination-next-text="<i class='fa fa-caret-right fa-lg'></i>"

    data-toolbar="#toolbar"
    data-loading-template="loadingTemplate"

    data-caller="{{ caller }}"
    data-save-url="{{ save_url }}"    
    data-defer-url="{{ defer_url }}">
    <thead>
        <tr>
            {% for column in columns %}
            {{ _self.output_column(column, (row_edit or row_show) and column.sortable) }}
            {% endfor %}
        </tr>
    </thead>
    <tbody>
        {% for row in rows %}
        <tr{% if row.id == id %} class="{{ row_selector }}"{% endif %}>
            {% for column in columns %}
            <td>{{ row[column.field] }}</td>
            {% endfor %}
        </tr>
        {% endfor %}
    </tbody>
</table>
{# dropdown actions #}
<div id="dropdown-actions" class="dropdown d-print-none d-none">
    {{ icons.dropdownEllipsis() }}
    <div class="dropdown-menu dropdown-menu-right">
        {% block edit_actions -%}{%- endblock %}
    </div>
</div>
{%- endblock -%}

{% block stylesheets %}
{{ asset_css('css/bootstrap-table.css') }}
{%- endblock -%}

{% block javascripts -%}
{% if app.debug %}
{{ parent() }}
{{ asset_js('js/vendor/bootstrap-table/bootstrap-table.js') }}
{{ asset_js('js/vendor/bootstrap-table/extensions/defer-url/bootstrap-table-defer-url.js') }}
{{ asset_js('js/vendor/datatables/js/jquery.mark.js') }}
{{ asset_js('js/vendor/contextmenu/jquery.contextMenu.js') }}
{{ asset_js('js/extensions/bootstrap-table-extensions.js') }}
{{ asset_js('js/extensions/bootstrap-table-fr-CH.js') }}
{{ asset_js('js/extensions/contextmenu-extensions.js') }}
{{ asset_js('js/application/bootstrap_table.js') }}
{% else %}
{{ asset_js('js/bootstrap_tables.js') }}
{% endif %}
{%- endblock -%}
